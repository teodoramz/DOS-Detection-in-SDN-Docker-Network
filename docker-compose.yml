version: '3.8'
services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    network_mode: none

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    network_mode: none
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "172.16.100.51:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://172.16.100.50:9092"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_BROKER_ID: "1"

  dns:
    image: internetsystemsconsortium/bind9:9.18
    container_name: dns
    network_mode: none
    volumes:
      - ./named.conf:/etc/bind/named.conf
      - ./db.example.com:/etc/bind/db.example.com
    depends_on:
      - kafka
    command: [ "-g" ]

  proxy:
    image: nginx:alpine
    container_name: proxy
    network_mode: none
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - web

  web:
    image: python:3.9-slim
    container_name: web
    network_mode: none
    volumes:
      - ./app.py:/app/app.py
      - ./requirements.txt:/app/requirements.txt
    working_dir: /app
    command: sh -c "pip install -r requirements.txt && python app.py"

  dns_collector:
    image: python:3.9-slim
    container_name: dns_collector
    network_mode: none
    cap_add:
      - NET_RAW
      - NET_ADMIN
    volumes:
      - ./dns_collector.py:/collector.py
    depends_on:
      - kafka
    command: sh -c "pip install scapy kafka-python && python /collector.py"

  proxy_collector:
    image: python:3.9-slim
    container_name: proxy_collector
    network_mode: none
    cap_add:
      - NET_RAW
      - NET_ADMIN
    volumes:
      - ./proxy_collector.py:/collector.py
    depends_on:
      - kafka
    command: sh -c "pip install scapy kafka-python && python /collector.py"

  web_collector:
    image: python:3.9-slim
    container_name: web_collector
    network_mode: none
    cap_add:
      - NET_RAW
      - NET_ADMIN
    volumes:
      - ./web_collector.py:/collector.py
    depends_on:
      - kafka
    command: sh -c "pip install scapy kafka-python && python /collector.py"

  ml_worker:
    image: python:3.9-slim
    container_name: ml_worker
    network_mode: none
    volumes:
      - ./ml_worker.py:/ml_worker.py
    depends_on:
      - kafka
      - ryu
    command: sh -c "pip install scapy kafka-python requests && python /ml_worker.py"

  ryu:
    image: python:3.9-slim
    container_name: ryu
    network_mode: none
    volumes:
      - ./ddos_blocker.py:/ddos_blocker.py
    depends_on:
      - kafka
    command: sh -c "pip install ryu && ryu-manager --ofp-tcp-listen-port 6633 /ddos_blocker.py ryu.app.ofctl_rest"
